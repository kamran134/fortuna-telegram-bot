const TelegramBot = require('node-telegram-bot-api');

const {
    register, getRegistered, startGame, showGames, deactiveGames,
    getGamePlayers, addGuest, whatTime, agilliOl, getAzList,
    connectTo, showGroups, showYourGroups
} = require('./commands');
const adminCommands = require('./commands/adminCommands');
const {
    appointmentToTheGame, declineAppointment, notConfirmedAttendance, 
    deactiveGame, startGameInSelectedGroup, showGamesInSelectedGroup,
    showUsersInSelectedGroup
} = require('./callbacks');
const { inactive, saySomethingToInactive, tagGamePlayers } = require('./commands/gamePlayers');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather
const token = '5853539307:AAGIfxr3O_mu-uN07fqYCirWzxTHs-UqrJY';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

// –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const messageText = msg.text && msg.text.startsWith('/') ? msg.text.toLowerCase().replace('@fortunavolleybalbot', '') : msg.text ? msg.text.toLowerCase() : '';
    const chatMember = await bot.getChatMember(chatId, userId);
    const isAdmin = chatMember.status === 'administrator' || chatMember.status === 'creator';

    if (messageText === '/register') register(msg, bot);
    else if (messageText === '/tagregistered' && isAdmin) getRegistered(msg, bot, 'tag');
    else if (messageText === '/tagregistered' && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç –º–∞—Å—Å–æ–≤–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –≤—Å–µ—Ö!');
    else if (messageText === '/showregistered') getRegistered(msg, bot, 'show');
    else if (messageText.startsWith('/startgame') && isAdmin) startGame(msg, bot);
    else if (messageText.startsWith('/startgame') && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É. Be clever!', {reply_to_message_id: msg.message_id});
    else if (messageText === '/showgames') showGames(chatId, bot);
    else if (messageText === '/deletegame') {}
    else if (messageText === '/deactivegame' && isAdmin) deactiveGames(msg, bot);
    else if (messageText === '/deactivegame' && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É. –ê –¥–ª—è –≤–∞—Å –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: /agilliol :D');
    else if (messageText === '–ø—Ä–∏—Ñ—Ñ–∫–∏') bot.sendMessage(chatId, '–ü—Ä–ò—Ñ–§–∫–ò, ' + msg.from.first_name + '. –ö–∞–ö –¥–ï–ª–ò—Ñ–§–∫–ò. (–ß—Ç–æ –∑–∞ –≤–∞–Ω–∏–ª—å–∫–∞ –∏–∑ –Ω–∞—á–∞–ª–∞ –Ω—É–ª–µ–≤—ã—Ö?)');
    else if (messageText === '–ø—Ä–∏–≤–µ—Ç') bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç, ' + msg.from.first_name + '. –ò–≥—Ä–∞—Ç—å –±—É–¥–µ–º?');
    else if (messageText === '/list') getGamePlayers(msg, bot);
    else if (messageText === '–ü–æ–∫–∞') bot.sendMessage(chatId, '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, ' + msg.from.first_name);
    else if (messageText.startsWith('/addguest') && isAdmin) addGuest(msg, bot);
    else if (messageText.startsWith('/addguest') && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –≥–æ—Å—Ç—è –≤ –∏–≥—Ä—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ–¥–º—ç–Ω—É.');
    else if (messageText.includes('–≤–æ —Å–∫')) whatTime(msg, bot);
    else if (messageText === '/getgroupid' && isAdmin) bot.sendMessage(userId, `ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã ${chatId}`);
    else if (messageText === '/getgroupid' && !isAdmin) bot.sendMessage(chatId, '–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –¥–ª—è –º–∞–≥–ª–æ–≤!');
    else if (messageText === '/–∞–ª–æ—Ö–∞–º–æ—Ä–∞') bot.sendMessage(chatId, `–ù–µ—Ç, ${msg.from.first_name}. –≠—Ç–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä–æ–µ—Ç —Ç–µ–±–µ –¥–≤–µ—Ä–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...`, {reply_to_message_id: msg.message_id});
    else if (messageText.includes('–∞–≤–∞–¥–∞ –∫–µ–¥–∞–≤—Ä–∞') || messageText.includes('–∞–≤–∞–¥–∞–∫–µ–¥–∞–≤—Ä–∞')) bot.sendMessage(chatId, `De "s…ôn √∂l"`, {reply_to_message_id: msg.message_id});
    else if (messageText === '/agilliol' || messageText === '/aƒüƒ±llƒ± ol') agilliOl(msg, bot);
    else if (messageText.startsWith('–∞ –≤—ã —Ä—ã–±–æ–≤ –ø—Ä–æ–¥–æ–µ—Ç–µ') || messageText.startsWith('–∞ –≤—ã —Ä—ã–±–æ–≤ –ø—Ä–æ–¥–æ—ë—Ç–µ')) bot.sendMessage(chatId, '–ù–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º.', {reply_to_message_id: msg.message_id});
    else if (messageText.startsWith('/azlist')) getAzList(msg, bot);
    else if (messageText.includes('—Ç–≤–æ–π –±–æ—Ç')) bot.sendMessage(chatId, `–ß—Ç–æ–æ–æ–æ? üò≥`, { reply_to_message_id: msg.message_id });
    else if (messageText === '/saysomethingtoinactive' && isAdmin) saySomethingToInactive(msg, bot);
    else if (messageText === '/saysomethingtoinactive' && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç –æ—Ç—á–∏—Ç—ã–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤!');
    else if (messageText === '/deleteplayer' && isAdmin) showGames(chatId, bot, true);
    else if (messageText === '/deleteplater' && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –∏–≥—Ä—ã. –ú–æ–∂–µ—Ç –≤–∞–º –ø–æ–¥–æ–π–¥—ë—Ç –∫–æ–º–∞–Ω–¥–∞ /agilliolü§î');
    else if (messageText === '/taggamers' && isAdmin) tagGamePlayers()
    else if (messageText === '/taggamers' && !isAdmin) bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –æ–¥–º—ç–Ω –º–æ–∂–µ—Ç —Ç—Ä–µ–≤–æ–∂–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤. –ê –¥–ª—è –≤–∞—Å –µ—Å—Ç—å —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–∞–Ω–¥—ã /agilliol ü§™');

    // for admin group
    else if (messageText.startsWith('/connectto') && isAdmin) connectTo(msg, bot);
    else if (messageText === '/showgroups' && isAdmin) showGroups(chatId, bot);
    else if (messageText === '/adminstartgame' && isAdmin) showYourGroups(chatId, bot, 'Start');
    else if (messageText === '/admindeactivegame' && isAdmin) showYourGroups(chatId, bot, 'Deactive');
    else if (messageText === '/adminshowusers' && isAdmin) showYourGroups(chatId, bot, 'ShowUsers');
    else if (messageText.startsWith('/adminedituser')) adminCommands.editUser(msg, bot);
    else if (messageText === '/adminremoveplayer') {}
});

bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const chatMember = await bot.getChatMember(chatId, query.from.id);
    const isAdmin = chatMember.status === 'administrator' || chatMember.status === 'creator';

    if (query.data.startsWith('appointment_')) appointmentToTheGame(query, bot);
    else if (query.data.startsWith('notconfirmed_')) notConfirmedAttendance(query, bot);
    else if (query.data.startsWith('decline_')) declineAppointment(query, bot);
    else if (query.data.startsWith('deactivegame_') && isAdmin) deactiveGame(query, bot);
    else if (query.data.startsWith('deactivegame_') && !isAdmin) 
        bot.sendMessage(chatId, `–ë—ã–π! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É. –¢–∞–∫ —á—Ç–æ, <a href="tg://user?id=${query.from.id}">${query.from.first_name}</a> aƒüƒ±llƒ± ol ‚òùüèª`, 
        {
            parse_mode: 'HTML',
            reply_to_message_id: query.data.message_id
        });
    else if (query.data.startsWith('selectedGroupForStart_') && isAdmin) startGameInSelectedGroup(query, bot);
    else if (query.data.startsWith('selectedGroupForDeactive_') && isAdmin) showGamesInSelectedGroup(query, bot);
    else if (query.data.startsWith('selectedGroupForShowUsers_') && isAdmin) showUsersInSelectedGroup(query, bot);
});