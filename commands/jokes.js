const moment = require('moment');
const { getGamesTimesFromDatabase, getRandomUserFromDatabase, addJokeToDataBase, deleteJokeFromDataBase, getJokesFromDataBase, updateJokeInDataBase } = require('../database');

async function agilliOl(msg, bot) {
    const chatId = msg.chat.id;

    try {
        const randomUser = await getRandomUserFromDatabase(chatId);

        if (randomUser) {
            bot.sendMessage(chatId, `@${randomUser.username ? randomUser.username :
                '<a href="tg://user?id=${user.user_id}">' + randomUser.first_name + '</a>'}, aƒüƒ±llƒ± ol! üß†`,
                {parse_mode: 'HTML'});
        } else {
            bot.sendMessage(chatId, '–ü–µ—á–∞–ª—å–Ω–æ, –∫–æ–≥–¥–∞ –Ω–µ–∫–æ–º—É –≥–æ–≤–æ—Ä–∏—Ç—å "Aƒüƒ±llƒ± ol" ü•≤');
        }
    } catch (error) {
        console.error('AGILLI OL ERROR: ', error);
    }
}

async function whatTime(msg, bot) {
    const chatId = msg.chat.id;

    try {
        const gamesTimes = await getGamesTimesFromDatabase(chatId);

        if (gamesTimes && gamesTimes.length > 0) {
            const gamesTimesString = gamesTimes.map(game => `${game.label}: ${moment(game.game_starts, 'HH:mm:ss').format('HH:mm')}`).join(', ');
            bot.sendMessage(chatId, `–ú—ç—ç—ç—Ö. –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å? üòí\n${gamesTimesString}`);
        }
    } catch (error) {
        console.error('WHAT TIME ERROR: ', error);
    }
}

async function addJoke(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (checkCreatorId(userId)) {
        try {
            const parts = msg.text.replace('/adminaddjoke ', '').split('/');
            if (parts.length == 2) {
                const [joke, jokeType] = parts;
                await addJokeToDataBase(joke, jokeType);
    
                bot.sendMessage(chatId, `–í–∞—à–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è "—à—É—Ç–∫–∞" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ª—é–±—É–π—Ç–µ—Å—å –Ω–∞ –Ω–µ—ë –µ—â—ë —Ä–∞–∑: ${joke}`);
            } else {
                bot.sendMessage(chatId, `–î–µ–¥, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–∞–ø–æ—Ä—Ç–∞—á–∏–ª. –í–æ—Ç –∫–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç: /adminaddjoke [—à—É—Ç–∫–∞]/[–Ω–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —à—É—Ç–∫–∏]`);
            }
            
        } catch (error) {
            bot.sendMessage(chatId, `–í–∞—à–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è "—à—É—Ç–∫–∞" –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞—Å—å. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º —Ç—É–ø–∞—è. –ê –≤–æ–∑–º–æ–∂–Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –≤–æ—Ç —Ç–∞–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
        }
    } else {
        bot.sendMessage(chatId, `–¢–∞–∫—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É, –∫–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É —à—É—Ç–∫–∞–º–∏ –º—ã –º–æ–≥–ª–∏ –¥–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏—Å—Ç–∏–Ω–Ω—ã–º —é–º–æ—Ä–∏—Å—Ç–∞–º. –ü–æ—ç—Ç–æ–º—É –Ω–∏–∫—Ç–æ –∫—Ä–æ–º–µ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç —É–≤–ª–µ–∫–∞—Ç—å—Å—è —ç—Ç–∏–º!`);
    }
}

async function deleteJoke(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (checkCreatorId(userId)) {
        const jokeId = +msg.text.replace('/admindeletejoke ', '');
        if (Number.isInteger(jokeId)) {
            try {
                const result = await deleteJokeFromDataBase(jokeId);
                return result;
            } catch (error) {
                bot.sendMessage(chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —à—É—Ç–∫—É. –õ–∏–±–æ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –≥–µ–Ω–∏–∞–ª—å–Ω–∞, –ª–∏–±–æ –µ—Å—Ç—å –æ—à–∏–±–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫–∞—è: ${error}`);
            }
        } else {
            bot.sendMessage(chatId, '–ß–µ–µ–µ–µ–ª, —É –Ω–∞—Å –≤ –±–∞–∑–µ id-—à–∫–∏ —ç—Ç–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –∞ —Ç—ã –∫–∞–∫—É—é-—Ç–æ —Ö–µ—Ä–æ—Ç—É –Ω–∞–ø–∏—Å–∞–ª!');
        }
    } else {
        bot.sendMessage(chatId, `–ì–µ–Ω–∏–∞–ª—å–Ω—ã–µ —à—É—Ç–∫–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∏–µ –∂–µ –≥–µ–Ω–∏–∞–ª—å–Ω—ã–µ —é–º–æ—Ä–∏—Å—Ç—ã, —Ç–æ –µ—Å—Ç—å —Å–∞–º–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏!`);
    }
}

async function listJokes(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (checkCreatorId(userId)) {
        const jokeType = +msg.text.replace('/adminlistjokes ', '');
        if (Number.isInteger(jokeType)) {
            try {
                const result = await getJokesFromDataBase(jokeType);
                bot.sendMessage(chatId, result.map(joke => `id: ${joke.id} - —à—É—Ç–∫–∞: ${joke.joke} - –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${joke.type}`).join('\n'));
            } catch (error) {
                bot.sendMessage(chatId, `–®—É—Ç–∫–∏ –æ—Ç –Ω–∞—Å —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è –∏–∑-–∑–∞ –≤–æ—Ç —ç—Ç–æ–π –æ—à–∏–±–∫–∏: ${error}`)
            }
        } else {
            bot.sendMessage(chatId, `–ù–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —à—É—Ç–æ–∫ —ç—Ç–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞. –ê —Ç—ã –≤–≤—ë–ª —Ñ–∏–≥ –∑–Ω–∞–µ—Ç —á—Ç–æ!`);
        }
    } else {
        bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –∏—Å—Ç–∏–Ω–Ω—ã–º —é–º–æ—Ä–∏—Å—Ç–∞–º —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–µ—Ç–∏—Ç—å —ç—Ç–æ—Ç —Ç–∞–π–Ω—ã–π –º–∏—Ä —à—É—Ç–æ–∫!');
    }
}

async function editJoke(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (checkCreatorId(userId)) {
        const parts = msg.text.replace('/admineditjoke ', '').split('/');

        try {
            if (parts.length == 3) {
                const [id, joke, jokeType] = parts;
                if (Number.isInteger(+id) && Number.isInteger(+jokeType)) {
                    const result = await updateJokeInDataBase(id, joke, jokeType);
                    return result;
                } else {
                    bot.sendMessage(chatId, '–õ–∏–±–æ id-—à–∫–∞, –ª–∏–±–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —à—É—Ç–æ–∫ –Ω–µ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ. –ò—Å–ø—Ä–∞–≤—å!');
                }
            }
            else if (parts.length == 2) {
                const [id, joke] = parts;
                if (Number.isInteger(+id)) {
                    const result = await updateJokeInDataBase(id, joke, 0);
                    return result;
                } else {
                    bot.sendMessage(chatId, '–ö–∞–∫–æ–µ-—Ç–æ –ª–µ–≤–æ–µ id —Ç—ã –Ω–∞–ø–∏—Å–∞–ª');
                }
            }
        } catch (error) {
            bot.sendMessage(chatId, `–≠—Ç–∞ —à—É—Ç–∫–∞ –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏–∑-–∑–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –ª–∏–±–æ —É –≤–∞—Å –≤–æ—Ç —ç—Ç–∞ –æ—à–∏–±–∫–∞: ${error}`);
        }
    } else {
        bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ –∏—Å—Ç–∏–Ω–Ω—ã–µ —é–º–æ—Ä–∏—Å—Ç—ã –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —à—É—Ç–∫–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞. –ê –æ—Å—Ç–∞–ª—å–Ω—ã–º —Å–ª–µ–¥—É–µ—Ç –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å —É –ª—É—á—à–∏—Ö!');
    }
}

function checkCreatorId(userId) {
    return (userId === 963292126 || userId === 112254199);
}

module.exports = {
    agilliOl,
    whatTime,
    addJoke,
    deleteJoke,
    listJokes,
    editJoke
}