const moment = require('moment');
const { getGamesTimesFromDatabase, getRandomUserFromDatabase, addJokeToDataBase } = require('../database');

async function agilliOl(msg, bot) {
    const chatId = msg.chat.id;

    try {
        const randomUser = await getRandomUserFromDatabase(chatId);

        if (randomUser) {
            bot.sendMessage(chatId, `@${randomUser.username ? randomUser.username :
                '<a href="tg://user?id=${user.user_id}">' + randomUser.first_name + '</a>'}, aƒüƒ±llƒ± ol! üß†`,
                {parse_mode: 'HTML'});
        } else {
            bot.sendMessage(chatId, '–ü–µ—á–∞–ª—å–Ω–æ, –∫–æ–≥–¥–∞ –Ω–µ–∫–æ–º—É –≥–æ–≤–æ—Ä–∏—Ç—å "Aƒüƒ±llƒ± ol" ü•≤');
        }
    } catch (error) {
        console.error('AGILLI OL ERROR: ', error);
    }
}

async function whatTime(msg, bot) {
    const chatId = msg.chat.id;

    try {
        const gamesTimes = await getGamesTimesFromDatabase(chatId);

        if (gamesTimes && gamesTimes.length > 0) {
            const gamesTimesString = gamesTimes.map(game => `${game.label}: ${moment(game.game_starts, 'HH:mm:ss').format('HH:mm')}`).join(', ');
            bot.sendMessage(chatId, `–ú—ç—ç—ç—Ö. –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å? üòí\n${gamesTimesString}`);
        }
    } catch (error) {
        console.error('WHAT TIME ERROR: ', error);
    }
}

async function addJoke(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (userId === 963292126 || userId === 112254199) {
        try {
            const parts = msg.text.replace('/adminaddjoke ', '').split('/');
            if (parts.length == 2) {
                const [joke, jokeType] = parts;
                await addJokeToDataBase(joke, jokeType);
    
                bot.sendMessage(chatId, `–í–∞—à–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è "—à—É—Ç–∫–∞" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ª—é–±—É–π—Ç–µ—Å—å –Ω–∞ –Ω–µ—ë –µ—â—ë —Ä–∞–∑: ${joke}`);
            } else {
                bot.sendMessage(chatId, `–î–µ–¥, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–∞–ø–æ—Ä—Ç–∞—á–∏–ª. –í–æ—Ç –∫–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç: /adminaddjoke [—à—É—Ç–∫–∞]/[–Ω–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —à—É—Ç–∫–∏]`);
            }
            
        } catch (error) {
            bot.sendMessage(chatId, `–í–∞—à–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è "—à—É—Ç–∫–∞" –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞—Å—å. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º —Ç—É–ø–∞—è. –ê –≤–æ–∑–º–æ–∂–Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –≤–æ—Ç —Ç–∞–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
        }
    } else {
        bot.sendMessage(chatId, `–¢–∞–∫—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É, –∫–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É —à—É—Ç–∫–∞–º–∏ –º—ã –º–æ–≥–ª–∏ –¥–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏—Å—Ç–∏–Ω–Ω—ã–º —é–º–æ—Ä–∏—Å—Ç–∞–º. –ü–æ—ç—Ç–æ–º—É –Ω–∏–∫—Ç–æ –∫—Ä–æ–º–µ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ –Ω–µ –º–æ–≥—É—Ç —É–≤–ª–µ–∫–∞—Ç—å—Å—è —ç—Ç–∏–º!`);
    }
}

module.exports = {
    agilliOl,
    whatTime,
    addJoke
}